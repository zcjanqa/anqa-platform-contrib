name: Deploy to Hetzner
on:
  workflow_run:
    workflows: ["Build & Push"]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      VPS_IP: ${{ secrets.VPS_IP }}
      VPS_USER: ${{ secrets.VPS_SSH_USERNAME }}
    steps:
      - uses: actions/checkout@v4

      - name: Prepare SSH
        shell: bash
        run: |
          set -euo pipefail

          # 1) SSH dir & perms
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # 2) Private key from secrets (expects BASE64)
          printf '%s' "${{ secrets.VPS_SSH_KEY }}" | base64 -d > id_ed25519 || {
            echo "::error::Failed to decode VPS_SSH_KEY (is it base64?)"
            exit 1
          }
          chmod 600 id_ed25519
          test -s id_ed25519 || { echo "::error::VPS_SSH_KEY is empty"; exit 1; }

          # 3) known_hosts (prefer your pinned host keys secret if provided)
          if [[ -n "${{ secrets.VPS_SSH_HOST_KEYS }}" ]]; then
            printf '%s' "${{ secrets.VPS_SSH_HOST_KEYS }}" | base64 -d >> ~/.ssh/known_hosts
          else
            # Fallback: scan current host key (optionally verify below)
            ssh-keyscan -t ed25519 -H "$VPS_IP" >> ~/.ssh/known_hosts 2>/dev/null
          fi
          chmod 644 ~/.ssh/known_hosts

          # (Optional) Verify fingerprint matches the one you observed:
          # Expected: SHA256:xKYQ761WfIB5LFqeIiG4nF4pAqGU+5/E6Ab6l90Nk5c
          # ssh-keygen -l -E sha256 -f ~/.ssh/known_hosts | grep -q 'SHA256:xKYQ761WfIB5LFqeIiG4nF4pAqGU+5/E6Ab6l90Nk5c' \
          #   || { echo "::error::Server host key fingerprint mismatch"; exit 1; }

      - name: Send/refresh infra
        run: |
          rsync -az -e "ssh -i id_ed25519 -o UserKnownHostsFile=$HOME/.ssh/known_hosts -o StrictHostKeyChecking=yes" \
            infra "$VPS_USER@$VPS_IP:~"

      - name: Login to GHCR on server, pull & up
        run: |
          ssh -i id_ed25519 -o UserKnownHostsFile=$HOME/.ssh/known_hosts -o StrictHostKeyChecking=yes \
            "$VPS_USER@$VPS_IP" \
            'echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin && \
             docker network create web 2>/dev/null || true && \
             cd infra && docker compose pull && docker compose up -d && docker image prune -f'
