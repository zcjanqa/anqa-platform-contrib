"""Central registry for table metadata descriptions to be included in chatbot prompts."""

TABLE_METADATA = {
    # Meeting-related tables
    "austrian_parliament_meetings": "Meetings of the Austrian National Council and Federal Council",
    "belgian_parliament_meetings": "Meetings of the Belgian Federal Parliament",
    "ep_meetings": "European Parliament committee meetings and plenary sessions",
    "ipex_meetings": "Meetings of the Interparliamentary EU Information Exchange (IPEX)",
    "mec_prep_bodies_meetings": "Meetings of MEP preparatory bodies and working groups",
    "mec_sum_minist_meetings": "Meetings of EU Council ministerial summits",
    "meeting_calendar": "Calendar of EU institutional meetings",
    "meeting_topic_assignments": "Mapping between meetings and topics",
    "meeting_topics": "Topics discussed in parliamentary meetings",
    "mep_meetings": "Meetings between Members of European Parliament (MEPs) and external organizations",
    "polish_presidency_meeting": "Meetings during the Polish EU Council presidency",
    "spanish_commission_meetings": "Meetings of Spanish parliamentary commissions",
    "weekly_agenda": "EU institutions' weekly agendas and schedules",
    # Document-related tables
    "bt_documents": "Bundestag documents (Drucksachen) containing legislative documents from the German parliament",
    "bt_plenarprotokolle": "Bundestag plenary protocols containing transcripts of parliamentary sessions",
    "documents_embeddings": "Embeddings of legislative documents for semantic search",
    "lawtracker_procedures": "EU legislative procedures tracked through the legislative observatory",
    "legislative_files": "EU legislative files and procedures",
    # People-related tables
    "meps": "Members of the European Parliament (MEPs) with their roles and affiliations",
    "profiles": "User profiles and preferences in the OpenEU system",
    # Notification and chat
    "chat_tables": "Chat session and message records",
    "notification": "User notification preferences and history",
    # Twitter integration
    "tweets": "Relevant tweets from EU politicians and institutions",
    "twitter_user": "Twitter user profiles being monitored",
    # System tables
    "scheduled_job_runs": "System records of scheduled job executions",
    "search_meeting_suggestions": "Meeting suggestions generated by the recommendation system",
    "v_meeting": "View combining meeting data from multiple sources",
    # Default fallback description
    "__default__": "Unspecified data related to the EU.",
}


def get_table_description(table_name: str) -> str:
    """Get human-readable description for a table, falling back to default if not found."""
    return TABLE_METADATA.get(table_name, TABLE_METADATA["__default__"])
